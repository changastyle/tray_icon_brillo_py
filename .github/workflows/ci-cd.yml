name: CI/CD Pipeline

on:
  push:
    branches: [ main, ci-cd, prod ]
  pull_request:
    branches: [ main, ci-cd, prod ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Generate Version Info
      run: |
        mkdir -p dist/version-info/
        git rev-parse --short HEAD > dist/version-info/commit-id.txt
        git log -1 --pretty=%B > dist/version-info/commit-message.txt
        date +'%Y-%m-%d %H:%M' > dist/version-info/build-date.txt
        echo "RELEASE_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
        echo "BUILD_TIME=$(date +'%H:%M')" >> $GITHUB_ENV
        echo "COMMIT_ID=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Build with PyInstaller
      run: pyinstaller --onefile --name BRILLO BRILLO.py

    - name: List dist directory
      run: ls -l dist/

    - name: Verify executable exists
      run: test -f dist/BRILLO

    - name: Create Release
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: brillo-${{ env.RELEASE_DATE }}
        name: brillo-${{ env.RELEASE_DATE }}
        body: |
          üöÄ BRILLO Release (${{ env.RELEASE_DATE }} ${{ env.BUILD_TIME }})
          
          üìù Build Information:
          - Date: ${{ env.RELEASE_DATE }}
          - Time: ${{ env.BUILD_TIME }}
          - Commit: ${{ env.COMMIT_ID }}
          - Message: $(cat dist/version-info/commit-message.txt)
          
          üì¶ Assets:
          - BRILLO (Executable)
        draft: false
        prerelease: false
        files: |
          dist/BRILLO
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
